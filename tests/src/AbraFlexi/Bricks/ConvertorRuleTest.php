<?php

namespace Test\AbraFlexi\Bricks;

use AbraFlexi\Bricks\ConvertorRule;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2022-11-23 at 23:27:05.
 */
class ConvertorRuleTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var ConvertorRule
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new ConvertorRule();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::assignConvertor
     * @todo   Implement testassignConvertor().
     */
    public function testassignConvertor() {
        $this->assertEquals('', $this->object->assignConvertor());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::addExtId
     * @todo   Implement testaddExtId().
     */
    public function testaddExtId() {
        $this->assertEquals('', $this->object->addExtId());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::getRules
     * @todo   Implement testgetRules().
     */
    public function testgetRules() {
        $this->assertEquals('', $this->object->getRules());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::getRuleForColumn
     * @todo   Implement testgetRuleForColumn().
     */
    public function testgetRuleForColumn() {
        $this->assertEquals('', $this->object->getRuleForColumn());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::convertorClassTemplateGenerator
     * @todo   Implement testconvertorClassTemplateGenerator().
     */
    public function testconvertorClassTemplateGenerator() {
        $this->assertEquals('', $this->object->convertorClassTemplateGenerator());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::getOposites
     * @todo   Implement testgetOposites().
     */
    public function testgetOposites() {
        $this->assertEquals('', $this->object->getOposites());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Bricks\ConvertorRule::finalizeConversion
     * @todo   Implement testfinalizeConversion().
     */
    public function testfinalizeConversion() {
        $this->assertEquals('', $this->object->finalizeConversion());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

}
